var app = angular.module('store',['PrintsService','ClothingService']);

$(document).ready(function(){
    function addClass(el, className){
        if (el.classList)
            el.classList.add(className);
        else
            el.className += ' ' + className;
    }

    function removeClass(el, className){
        if (el.classList)
            el.classList.remove(className);
        else
            el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
    }



    $("#slideshow > div:gt(0)").hide();

    setInterval(function() {
        $('#slideshow > div:first')
            .fadeOut(1000)
            .next()
            .fadeIn(1000)
            .end()
            .appendTo('#slideshow');
    },  5000);

    $('.prints #myModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var image = button.attr('src'),
            title = button.data('item');
        console.log(title);
        var modal = $(this)
        modal.find('.print-image').attr( "src", image);
        modal.find('.modal-title').html(title);
    })

    var navScroll = function(){
        var scrollArea = document.querySelector('body'),
            nav = document.querySelector(".sticky-nav-page .navigation"),
            promo = document.querySelector(".sticky-nav-page .promo");
        if(nav){
            scrollArea.addEventListener('scroll', function () {
                var distance = promo.getBoundingClientRect().top;
                if(distance < 120){
                    addClass(nav, 'fixed')
                }
                if(distance > 120) {
                    removeClass(nav, 'fixed')
                }
            })
        }
    }

    navScroll();
});
// Avoid `console` errors in browsers that lack a console.
(function() {
    var method;
    var noop = function () {};
    var methods = [
        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'
    ];
    var length = methods.length;
    var console = (window.console = window.console || {});

    while (length--) {
        method = methods[length];

        // Only stub undefined methods.
        if (!console[method]) {
            console[method] = noop;
        }
    }
}());

// Place any jQuery/helper plugins in here.

app.controller('AccessoriesController',['$scope','Accessories',function($scope,Accessories){
    $scope.items = Accessories.items;

}]);
app.filter('chooseCharacter', function () {
    return function (input, str) {
        var filtered = [];
        angular.forEach(input, function(item) {
            if(item.character.toLowerCase() == str || str == undefined) {
                filtered.push(item);
            }
        });
        return filtered;

    };
});
var AccesoriesService = angular.module('AccesoriesService', [])
    .service('Accessories', function () {
        this.items = [
            {
                id:8,
                name:'',
                character:'Timothy',
                url:'img/timothy-green-square.jpg',
                price:'50.00'
            },
            {
                id:9,
                name:'Timothy Cosmic Pink Square',
                character:'Timothy',
                url:'img/timothy-pink-square.jpg',
                price:'50.00'
            },
            {
                id:10,
                name:'Timothy Cosmic Purple Square',
                character:'Timothy',
                url:'img/timothy-purple-square.jpg',
                price:'50.00'
            },
            {
                id:11,
                name:'Timothy Square',
                character:'Timothy',
                url:'img/timothy-original-square.jpg',
                price:'50.00'
            },
            {
                id:12,
                name:'Timothy Cosmic Yellow Square',
                character:'Timothy',
                url:'img/timothy-yellow-square.jpg',
                price:'50.00'
            }
        ]
    });
app.controller('PrintsController',['$scope','Prints','$http',function($scope,Prints,$http){

    Prints.async().then(function(d) {
        $scope.items = d;
        console.log($scope.items)
    });

}]);
app.filter('chooseCharacter', function () {
    return function (input, str) {
        var filtered = [];
        angular.forEach(input, function(item) {
            if(item.character_name.toLowerCase() == str || str == undefined) {
                filtered.push(item);
            }
        });
        return filtered;

    };
});
var AccesoriesService = angular.module('PrintsService', [])
    .service('Prints',['$http',function ($http) {

        var printsService = {
            async: function() {
                // $http returns a promise, which has a then function, which also returns a promise
                var promise = $http.get('getdata.php?group=prints').then(function (response) {
                    // The then function here is an opportunity to modify the response
                    //console.log(response);
                    // The return value gets picked up by the then in the controller.
                    return response.data;
                });
                // Return the promise to the controller
                return promise;
            }
        };
        return printsService;


    }]);
app.controller('ClothingController',['$scope','Clothing',function($scope,Clothing){
    Clothing.async().then(function(d) {
        $scope.items = d;
        console.log($scope.items)
    });


}]);
app.filter('chooseCharacter', function () {
    return function (input, str) {
        var filtered = [];
        angular.forEach(input, function(item) {
            if(item.character_name.toLowerCase() == str || str == undefined) {
                filtered.push(item);
            }
        });
        return filtered;

    };
});
var ClothingService = angular.module('ClothingService', [])
    .service('Clothing',['$http' ,function ($http) {
        var clothingService = {
            async: function() {
                // $http returns a promise, which has a then function, which also returns a promise
                var promise = $http.get('getdata.php?group=clothing').then(function (response) {
                    // The then function here is an opportunity to modify the response
                    //console.log(response);
                    // The return value gets picked up by the then in the controller.
                    return response.data;
                });
                // Return the promise to the controller
                return promise;
            }
        };
        return clothingService;
    }]);